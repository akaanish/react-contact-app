{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","Contact","id","payload","concat","toConsumableArray","map","contact","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3ade3a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          Contact => Contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact = action.payload) : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\"\n\nexport default class Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"> <span className=\"text-danger\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'\n\nexport default function TextInputGroup({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg',{\n                'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    label:PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired,\n    placeholder:PropTypes.string.isRequired,\n    value:PropTypes.string.isRequired,\n    type:PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired,\n    error:PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    //check for erors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n    //clears state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    //check for erors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    //clears state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n    const { branding } = props;\n  return (\n    <div>\n      <nav className = \"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className = \"container\">\n          <a href = \"/\" className = \"navbar-brand\">{ branding }</a>\n        <div>\n            <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"></i>\n                Home\n            </Link>\n            </li>\n            <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\"></i>\n              Add\n            </Link>\n            </li>\n            <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-question\"></i>\n              About\n            </Link>\n            </li>\n            </ul>\n        </div>\n      </div>\n      </nav>\n    </div>\n  )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport { Provider } from './context';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding = \"Contacts Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/> \n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/> \n              <Route exact path=\"/about\" component={About}/> \n              <Route component={NotFound}/> \n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}